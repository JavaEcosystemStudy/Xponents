<project default="dist" name="Xponents Distribution">

  <description>
    Builds a version of Xponents that runs out of the box.
  </description>

  <property name="xponents.home" value="${basedir}/../" />
  <property name="version" value="2.7.7"/>
  <property name="release" location="${xponents.home}/Xponents-${version}" />

  <property name="release.xtext" location="${xponents.home}/XText-${version}" />


  <!--  Consolidate XText items to their own release app
    -->
  <target name="rel.xtext">
    <delete dir="${release.xtext}"/>

    <mkdir dir="${release.xtext}"/>
    <mkdir dir="${release.xtext}/lib"/>
    <mkdir dir="${release.xtext}/logs"/>
    <mkdir dir="${release.xtext}/test"/>
    <mkdir dir="${release.xtext}/script"/>

    <exec executable="mvn" dir="${xponents.home}/XText" failonerror="true">
      <arg value="-DoutputDirectory=${release.xtext}/lib"/>
      <arg value="-DincludeScope=test"/>
      <arg value="-DincludeScope=runtime"/>
      <arg value="-DincludeScope=compile"/>
      <arg value="dependency:copy-dependencies"/>
    </exec>

    <copy todir="${release.xtext}/lib/">
        <fileset dir="${xponents.home}/XText/target">
           <include name="*.jar" />
        </fileset>
        <fileset dir="${xponents.home}/XText/lib">
           <include name="*.jar" />
        </fileset>
    </copy>

    <copy todir="${release.xtext}">
        <fileset dir="${xponents.home}/XText/">
           <include name="*.htm*" />
           <include name="*.md" />
        </fileset>
    </copy>

    <copy todir="${release.xtext}/script/">
        <fileset dir="${xponents.home}/XText/script">
           <include name="*.*" />
        </fileset>
    </copy>

    <copy todir="${release.xtext}/test/">
        <fileset dir="${xponents.home}/XText/src/test/resources/">
           <include name="*.*" />
        </fileset>
    </copy>

  </target>

 
  <!-- Release script for Xponents complete. -->

  <target name="copy-libs" >
    <delete dir="${xponents.home}/Examples/lib"/>
    <delete dir="${xponents.home}/Extraction/lib"/>
    <delete dir="${xponents.home}/XText/lib"/>
    <delete dir="${xponents.home}/Basics/lib"/>

    <delete dir="${release}"/>

    <mkdir dir="${release}"/>
    <mkdir dir="${release}/lib"/>
    <mkdir dir="${release}/lib/python"/>
    <mkdir dir="${release}/logs"/>
    <mkdir dir="${release}/etc"/>
    <mkdir dir="${release}/test"/>
    <mkdir dir="${release}/script"/>


    <!-- As Examples requires all other dependencies it is a good one for forcing the copy
     -->
    <exec executable="mvn" dir="${xponents.home}/Examples" failonerror="true">
      <arg value="-DoutputDirectory=${release}/lib"/>
      <arg value="-DincludeScope=test"/>
      <arg value="-DincludeScope=runtime"/>
      <arg value="-DincludeScope=compile"/>
      <arg value="dependency:copy-dependencies"/>
    </exec>

    <copy todir="${release}/lib/">
        <fileset dir="${xponents.home}/Examples/target">
           <include name="*.jar" />
        </fileset>
    </copy>
    <copy todir="${release}/lib/">
        <fileset dir="${xponents.home}/Examples/lib">
           <include name="*.jar" />
        </fileset>
    </copy>
    <copy todir="${release}/lib/">
        <fileset dir="${xponents.home}/Extraction/target">
           <include name="*-tests.jar" />
        </fileset>
    </copy>
    <copy todir="${release}/lib/python">
        <fileset dir="${xponents.home}/Extraction/src/main/python" >
           <exclude name="**/*.pyc"></exclude> 
        </fileset>
    </copy>
  </target>
  <target name="copy-solr">
    <subant >
       <fileset dir="${xponents.home}/solr" includes="build-gazetteer.xml"/>
       <target name="proxy" />
       <target name="init" />
    </subant>
    <copy todir="${release}/solr/">
        <fileset dir="${xponents.home}/solr" />
    </copy>
    <delete file="${release}/solr/build.properties" />
  </target>

  <target name="copy-data">
    <copy todir="${release}/test/">
        <fileset dir="${xponents.home}/Extraction/src/test/resources/">
           <include name="*.*" />
        </fileset>
        <fileset dir="${xponents.home}/XText/src/test/resources/">
           <include name="*.*" />
        </fileset>
    </copy>
  </target>

  <target name="copy-script">
    <copy todir="${release}/script/">
        <fileset dir="${xponents.home}/script">
           <include name="*.*" />
        </fileset>
        <fileset dir="${xponents.home}/XText/script">
           <include name="*.*" />
        </fileset>
    </copy>
    <copy todir="${release}/etc/">
        <fileset dir="${xponents.home}/Extraction/src/test/resources">
           <include name="log4j.*" />
        </fileset>
        <fileset dir="${xponents.home}/Extraction/src/test/resources">
           <include name="Coord_Patterns*.*" />
        </fileset>
    </copy>
    <copy todir="${release}/XTax">
        <fileset dir="${xponents.home}/Extraction/XTax" />
    </copy>
  </target>

  <target name="apidocs" >
        <exec executable="mvn" dir="${xponents.home}" failonerror="true">
            <arg value="javadoc:jar" />
        </exec>
  </target>

  <target name="copy-docs" depends="apidocs">
    <copy todir="${release}/">
        <fileset dir="${xponents.home}/">
           <include name="NOTICE" />
           <include name="LICENSE" />
           <include name="*.md" />
        </fileset>
    </copy>
    <copy todir="${release}/doc/Extraction/apidocs">
        <fileset dir="${xponents.home}/Extraction/target/apidocs"/>
    </copy>
    <copy todir="${release}/doc/Extraction/">
        <fileset dir="${xponents.home}/Extraction/doc"/>
    </copy>
    <copy todir="${release}/doc/Extraction/">
        <fileset dir="${xponents.home}/Extraction/src/main/resources">
           <include name="*.cfg" />
        </fileset>
    </copy>

    <copy todir="${release}/doc/XText/apidocs">
        <fileset dir="${xponents.home}/XText/target/apidocs"/>
    </copy>
    <copy todir="${release}/doc/XText/">
        <fileset dir="${xponents.home}/XText/">
           <include name="*.htm*" />
           <include name="*.md" />
        </fileset>
    </copy>
    <copy todir="${release}/doc/Examples/apidocs">
        <fileset dir="${xponents.home}/Examples/target/apidocs" />
    </copy>
  </target>

  <target name="dist" depends="copy-libs, copy-script, copy-data, copy-solr, copy-docs" description="Build a zip file containing a distributable, runnable thing.">

   <!-- Zip it .-->
  </target>
</project>
