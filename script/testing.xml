<?xml version="1.0"?>

<project name="Xponents" >

  <property name="xponents" value="${basedir}/../" />
  <property name="xponents_solr" value="${xponents}/xponents-solr/solr7" />

  <path id="runtime.classpath">
    <pathelement location="${xponents}/etc" />
    <fileset dir="${xponents}/lib" includes="**/*.jar" />
    <!-- JARs in etc are more like resource collections, not code -->
    <fileset dir="${xponents}/etc" includes="**/*.jar" />
  </path>

    <!--

    XCoord testing tasks and properties.

    -->

    <property name="xcoord_test_data" value = "${xponents}/test/Coord_Patterns_Truth_Text.txt" />

    <target name="xcoord" description="Template for Running an XCoord module" >
        <input message="file?" addproperty="get.file"/>
        <java classname="org.opensextant.extractors.test.TestXCoord" classpathref="runtime.classpath" fork="yes" dir="${xponents}" >
            <arg value="-u" />
            <arg value="${get.file}" />
        </java>
    </target>

    <target name="test-xcoord" description="Default tests for XCoord " depends="">
        <java classname="org.opensextant.extractors.test.TestXCoord" classpathref="runtime.classpath" fork="yes" dir="${xponents}">
            <arg value="-f" />
            <arg value="${xcoord_test_data}" />
        </java>
    </target>

    <target name="xcoord-by-line" description="Specialized Coordinate tests for XCoord " depends="">
        <input message="file?" addproperty="get.file"/>
        <java classname="org.opensextant.extractors.test.TestXCoord" classpathref="runtime.classpath" fork="yes" dir="${xponents}">
            <arg value="-t" />
            <arg value="${get.file}" />
        </java>
    </target>

    <!--

    XTemporal testing tasks and properties.

    -->

  <!-- sample test document with variety of truth dates does not exist yet.  -->
  <property name="xtemp_test_data" value = "${xponents}/test/Date_Patterns_2012.txt " />

  <target name="xtemporal" description="Template for Running a module" depends="">
    <input message="file?" addproperty="get.file"/>
    <java classname="org.opensextant.extractors.test.TestXTemporal" classpathref="runtime.classpath" fork="yes" dir="${xponents}">
      <arg value="${get.file}" />
    </java>
  </target>


  <target name="test-xtemporal" description="Default tests for XTemp " depends="">
    <java classname="org.opensextant.extractors.test.TestXTemporal" classpathref="runtime.classpath" fork="yes" dir="${xponents}">
      <arg value="-f" />
      <!--
      <arg value="${xtemp_test_data}" />
      -->
    </java>
  </target>



    <!--

    PoLi testing tasks and properties.

    -->

  <target name="poli" description="Run user file against PoLi" depends="">
    <java classname="org.opensextant.extractors.test.TestPoLi" classpathref="runtime.classpath" fork="yes" dir="${xponents}">
      <arg value="-f" />
    </java>
  </target>

  <target name="test-poli" description="Default tests for PoLi" depends="">
    <java classname="org.opensextant.extractors.test.TestPoli" classpathref="runtime.classpath" fork="yes" dir="${xponents}">
      <arg value="-c" />
      <arg value="${config}" />
      <arg value="-u" />
      <arg value="${inputfile}" />
    </java>
  </target>



  <!-- XText -->
    <target name="convert">
        <java classname="org.opensextant.xtext.XText"  classpathref="runtime.classpath" fork="yes" dir="${xponents}">
            <jvmarg value="-Xmx600m"/>
            <jvmarg value="-Dlogback.configurationFile=${xponents}/etc/logback.xml" />
            <arg value="-i"/>
            <arg value="${input}"/>
            <arg value="-o"/>
            <arg value="${output}"/>
            <arg value="-e"/>
            <arg value="-h"/>
            <!--
            <arg value="-h"/>
            -->
        </java>
    </target>

  <!-- Examples Testing area -->
  <target name="test" description="Basic Runner for Geo/Temporal" >
        <input message="inputfile?" addproperty="get.inputfile"/>
        <input message="outputfile?" addproperty="get.outputfile"/>
        <input message="formats?" addproperty="get.formats"/>
        <java classname="org.opensextant.examples.BasicGeoTemporalProcessing" classpathref="runtime.classpath" fork="yes" dir="${xponents}" >
            <jvmarg value="-Dopensextant.solr=${xponents_solr}" />
            <jvmarg value="-Dlogback.configurationFile=${xponents}/etc/logback.xml" />
            <jvmarg value="-Dsolr.lock.type=single" />
            <jvmarg value="-Xmx2g" />
            <arg value="-i" />
            <arg value="${get.inputfile}" />
            <arg value="-o" />
            <arg value="${get.outputfile}" />
            <arg value="-f" />
            <arg value="${get.formats}" />
        </java>
    </target>

  <target name="test-geocoder" description="PlaceGeocoder" >
        <input message="inputfile?" addproperty="get.inputfile"/>
        <java classname="org.opensextant.extractors.test.TestPlaceGeocoder" classpathref="runtime.classpath" fork="yes" dir="${xponents}" >
            <jvmarg value="-Dopensextant.solr=${xponents_solr}" />
            <jvmarg value="-Dlogback.configurationFile=${xponents}/etc/logback.xml" />
            <jvmarg value="-Dsolr.lock.type=single" />
            <jvmarg value="-Xmx2g" />
            <jvmarg value="-Xms2g" />
            <arg value="-i" />
            <arg value="${get.inputfile}" />
            <arg value="-o" />
            <arg value="${get.outputfile}" />
        </java>
   </target>


    <!-- Run Tweet stuff.-->

    <!--  Refactor using org.opensextant.extractros.social.SimpleProcessorDemo 
    <target name="tweet-test" description="Test tweet geocoding, parsing">
        <java classname="org.opensextant.examples.twitter.TweetGeocoder"  classpathref="runtime.classpath" fork="yes" dir="${xponents}">

        <jvmarg value="-Xmx1g"/>
         // To use FileGDB export with GISCore you must add some libraries to java.library.path. Documenation TBD 
        <jvmarg value="-Djava.library.path=${xponents}/lib/linux-x64"/>
        <jvmarg value="-Dopensextant.solr=${xponents_solr}"/>
        <jvmarg value="-Dlog4j.configuration=${xponents}/etc/log4j.properties" />
        <arg value="-n" />
        <arg value="${job}" />
        <arg value="-i" />
        <arg value="${inputfile}" />
        <arg value="-f" />
        <arg value="${format}" />
        </java>
    </target>
    -->

</project>
