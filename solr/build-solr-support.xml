<?xml version="1.0"?>

<project name="OpenSextant XTax Solr support" >

    <property name="solr.v" value="4.10.4" />

    <property name="jetty.v" value="8.1.9.v20130131" />
    <property name="winstone.v" value="0.9.10" />
    <property name="textTagger.v" value="${solr.text.tagger.v}" />
    <property name="slf4j.v" value="1.7.10" />
    <property name="log4j.v" value="1.2.17" />
    <property name="guava.v" value="14.0.1" />
    <property name="xponents.v" value="2.7c" />
    <property name="supercsv.v" value="2.2.0" />

    <!-- setup proxy -->
    <target name="proxy" >
      <property name="proxy.port" value="80"/>
      <property name="proxy.user" value=""/>
      <property name="proxy.pass" value=""/>
      <!-- <setproxy proxyhost="${proxy.host}" proxyport="${proxy.port}" proxyuser="${proxy.user}" proxypassword="${proxy.pass}"/> -->
      <setproxy proxyhost="${proxy.host}" proxyport="${proxy.port}" />
    </target>

    <target name="setup">
        <mkdir dir="build" />
        <mkdir dir="build/containerLib" />
    </target>


    <!-- get some dependencies 'proxy' -->
    <target name="init" depends="setup">

        <get dest="build" skipexisting="true">
            <url url="http://repo1.maven.org/maven2/org/apache/solr/solr/${solr.v}/solr-${solr.v}.war" />
            <url url="http://repo1.maven.org/maven2/org/jvnet/hudson/winstone/winstone/${winstone.v}/winstone-${winstone.v}.jar" />
            <url url="http://repo2.maven.org/maven2/org/mortbay/jetty/jetty-runner/${jetty.v}/jetty-runner-${jetty.v}.jar" />
        </get>

        <!-- Dependencies specific to the solr runtime here, ie. not referred to in POM  -->
        <get dest="build/containerLib/" skipexisting="true">
            <url url="http://repo1.maven.org/maven2/org/slf4j/jcl-over-slf4j/${slf4j.v}/jcl-over-slf4j-${slf4j.v}.jar" />
        </get>

        <!-- Existing dependencies  that should be in Maven repo locally due to your Xponents build; e.g., pulled in by POM
          -->
        <copy todir="build/containerLib/" overwrite="false" failonerror="false"
              file="${user.home}/.m2/repository/org/slf4j/slf4j-api/${slf4j.v}/slf4j-api-${slf4j.v}.jar" />
        <copy todir="build/containerLib/" overwrite="false" failonerror="false"
              file="${user.home}/.m2/repository/log4j/log4j/${log4j.v}/log4j-${log4j.v}.jar" />
        <copy todir="build/containerLib/" overwrite="false" failonerror="false"
              file="${user.home}/.m2/repository/org/slf4j/slf4j-log4j12/${slf4j.v}/slf4j-log4j12-${slf4j.v}.jar" />
        <copy todir="build/containerLib/" overwrite="false" failonerror="false"
              file="${user.home}/.m2/repository/com/google/guava/guava/${guava.v}/guava-${guava.v}.jar" />

        <!-- get text tagger in first available of local maven repo, snapshot repo, maven central -->
        <copy todir="lib" overwrite="false" failonerror="false"
              file="${user.home}/.m2/repository/org/opensextant/solr-text-tagger/${textTagger.v}/solr-text-tagger-${textTagger.v}.jar"/>
        <copy todir="lib" overwrite="false" failonerror="false"
              file="${user.home}/.m2/repository/org/opensextant/opensextant-xponents-basics/${xponents.v}/opensextant-xponents-basics-${xponents.v}.jar"/>
        <copy todir="lib" overwrite="false" failonerror="false"
              file="${user.home}/.m2/repository/org/opensextant/opensextant-xponents/${xponents.v}/opensextant-xponents-${xponents.v}.jar"/>
        <copy todir="lib" overwrite="false" failonerror="false"
              file="${user.home}/.m2/repository/net/sf/supercsv/super-csv/${supercsv.v}/super-csv-${supercsv.v}.jar"/>
        <copy todir="build/containerLib" overwrite="false" failonerror="false"
            file="${user.home}/.m2/repository/com/google/guava/guava/${guava.v}/guava-${guava.v}.jar" />

        <copy todir="build/containerLib" overwrite="true" failonerror="false" file="log4j.properties"/>

        <get dest="lib" skipexisting="true" ignoreerrors="true">
            <url url="http://repo1.maven.org/maven2/org/opensextant/solr-text-tagger/${textTagger.v}/solr-text-tagger-${textTagger.v}.jar" />
        </get>


        <copy todir="${solr.solr.home}/lib"  overwrite="false" failonerror="false" >
            <fileset dir="lib"/>
        </copy>
    </target>

    <!-- TARGETS: -->
    <target name="start-jetty" depends="init">
                <exec-jetty-solr />
<!--
        <parallel >
            <daemons>
              <sequential>
                <exec-jetty-solr />
              </sequential>
            </daemons>
        </parallel>
        <echo message="Waiting for Solr to start by checking its URL..." />
        <waitfor maxwait="60" checkevery="15"  checkeveryunit="second" maxwaitunit="second" timeoutproperty="solr.failed">
            <http url="http://localhost:${solr.server.port}/solr/" />
        </waitfor>
        <fail if="solr.failed" message="Jetty Solr did not properly start, probably due to a configuration error. ${solr.failed}" />
-->
    </target>

    <target name="start-solr-daemon" depends="init">
        <parallel>
            <daemons>
                <exec-solr />
            </daemons>
        </parallel>

        <echo message="Waiting for Solr to start by checking its URL..." />
        <waitfor maxwait="60000" checkevery="20000" timeoutproperty="solr.failed">
            <http url="http://localhost:${solr.server.port}/solr" />
        </waitfor>
        <fail if="solr.failed" message="Solr did not properly start, probably due to a configuration error." />
    </target>

    <macrodef name="exec-solr">
        <sequential>
            <!-- 1 GB to build current gazetteer with 13 million rows -->
            <java jar="build/winstone-${winstone.v}.jar" fork="true" clonevm="true" failonerror="true"
                  maxmemory="1G">
                <sysproperty key="java.awt.headless" value="true" />
                <sysproperty key="solr.solr.home" value="${solr.solr.home}" />
                <sysproperty key="solr.enableRemoteStreaming" value="true" />
                <sysproperty key="java.util.logging.config.file" value="logging.properties" />
                <arg value="-controlPort=8081" />
                <arg value="--commonLibFolder=build/containerLib" />
                <arg value="--httpPort=${solr.server.port}" />
                <arg value="--warfile=build/solr-${solr.v}.war" />
                <arg value="--prefix=/solr" />
            </java>
        </sequential>
    </macrodef>

    <macrodef name="exec-jetty-solr">
        <sequential>
            <java jar="build/jetty-runner-${jetty.v}.jar" fork="true" clonevm="true" failonerror="true" maxmemory="2g">
                <sysproperty key="java.awt.headless" value="true" />
                <sysproperty key="solr.solr.home" value="${solr.solr.home}" />
                <sysproperty key="solr.enableRemoteStreaming" value="true" />
                <!-- <sysproperty key="java.util.logging.config.file" value="logging.properties" /> -->
                <sysproperty key="log4j.configuration" value="file://${basedir}/build/containerLib/log4j.properties" />

                <!-- Jetty arguments -->
                <arg value="--lib"/>
                <arg value="${basedir}/build/containerLib"/>
                <arg value="--classes"/>
                <arg value="${basedir}/build/containerLib"/>
                <arg value="--classes"/>
                <arg value="${basedir}/gazetteer/conf/"/>
                <arg value="--port"/>
                <arg value="${solr.server.port}"/>
                <arg value="--path"/>
                <arg value="/solr"/>
                <arg value="build/solr-${solr.v}.war"/>
            </java>
        </sequential>
    </macrodef>

    <target name="start-solr" description="Start Solr (Winstone) on value of 'solr.server.port'. Stop it via stop-solr."
            depends="init">
        <echo level="warning" message="Winstone doesn't properly handle HTTP POST chunked Transfer-Encoding" />
        <exec-solr />
    </target>

    <target name="stop-solr" description="Shut down Solr (Winstone)">
        <java classpath="build/winstone-${winstone.v}.jar" classname="winstone.tools.WinstoneControl">
            <!-- by default, port 8081 -->
            <arg value="shutdown" />
        </java>
        <!-- FYI I haven't found an equivalent for jetty-runner -->
    </target>

    <target name="print-start-jetty" description="Print instructions to run Solr with Jetty" depends="init">
        <echo message="java
 -Xmx500m -Djava.awt.headless=true -Dsolr.solr.home=${solr.solr.home} -Dlog4j.configuration=log4j.properties -Djava.util.logging.config.file=logging.properties
 -jar build/jetty-runner-${jetty.v}.jar --lib ./build/containerLib  --port ${solr.server.port} --path /solr build/solr-${solr.v}.war"/>
    </target>

</project>
