FROM adoptopenjdk:12-jdk-hotspot
# SHADOWS: FROM mubaldino/opensextant:xponents-3.3
# 
# --------------------------
ENV XLAYER_PORT=8787
ENV VERSION=Xponents-3.3

RUN adduser --system --group --uid 110 opensextant

ENV XPONENTS=/home/opensextant/Xponents
ENV MVN=apache-maven-3.6.3
ENV PATH=/opt/maven/bin:$PATH
ENV LOCAL_REPO_NAME=maven-repo
ENV LOCAL_REPO=$XPONENTS/maven-repo

# --------------------------
# Copy ./Xponents-3.x/<CONTENT> to target 
# Assumption is docker build is run from inside release folder
#
COPY ./ $XPONENTS/
COPY $LOCAL_REPO_NAME $XPONENTS/

# OFFLINE
#---------------------------
# Install Maven to allow for offline recompilation
RUN cd /tmp && curl -O http://mirrors.advancedhosters.com/apache/maven/maven-3/3.6.3/binaries/$MVN-bin.tar.gz  && \
   (cd /opt/ ; tar xzf /tmp/$MVN-bin.tar.gz) && \
   (mv /opt/$MVN /opt/maven)

# Copy in all source and resources
#
COPY ./src     $XPONENTS/src/
COPY ./pom.xml $XPONENTS/
COPY ./Core    $XPONENTS/Core/

WORKDIR $XPONENTS

# Build inside Docker to confirm "offline mode" works
# 1. Build fully as a test to show project is buildable inside container.
RUN cd ./Core && mvn -o install -Dmaven.repo.local=$LOCAL_REPO
RUN mvn -o -Dopensextant.solr=./xponents-solr/solr7 \
      -Dmaven.repo.local=$LOCAL_REPO clean package dependency:copy-dependencies

# 2. Copy built items and metadata from install to final runtime CLASSPATH ./lib
RUN cp ./target/*jar ./xponents-solr/solr7/lib/xponents*jar ./lib/

#---------------------------
EXPOSE $XLAYER_PORT 7000
ENTRYPOINT ./script/xlayer-docker.sh $XLAYER_PORT
