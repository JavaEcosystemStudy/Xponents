FROM adoptopenjdk:12-jdk-hotspot
# SHADOWS: FROM mubaldino/opensextant:xponents-3.5
# 
# --------------------------
ENV XLAYER_PORT=8787
ENV VERSION=Xponents-3.5
ENV XPONENTS=/home/opensextant/Xponents
ENV JAVA_XMS=1500m
ENV JAVA_XMX=1500m
ENV MVN_VER=3.8.4
ENV MVN=apache-maven-$MVN_VER
ENV PATH=/opt/maven/bin:$PATH
ENV LOCAL_REPO_NAME=maven-repo
# NOTE LOCAL_REPO is a absolute path
ENV LOCAL_REPO=$XPONENTS/$LOCAL_REPO_NAME

# RUN adduser --system --group --uid 110 opensextant
# USER opensextant

# --------------------------
# Copy ./Xponents-3.x/<CONTENT> to target 
#
COPY ./ $XPONENTS/

# OFFLINE
#---------------------------
# Install Maven to allow for offline recompilation
RUN cd /tmp && curl -O http://mirrors.advancedhosters.com/apache/maven/maven-3/$MVN_VER/binaries/$MVN-bin.tar.gz  && \
   (cd /opt/ ; tar xzf /tmp/$MVN-bin.tar.gz) && \
   (mv /opt/$MVN /opt/maven)

WORKDIR $XPONENTS

# Stage offline mode
RUN mvn dependency:go-offline -Dmaven.repo.local=$LOCAL_REPO
RUN find $LOCAL_REPO  -name "*.sha1"  -exec rm {} \;
RUN find $LOCAL_REPO  -name "*.repositories"  -exec rm {} \;

# Build inside Docker to confirm "offline mode" works
# 1. Build fully as a test to show project is buildable inside container.
RUN cd ./Core && mvn -o install -Dmaven.repo.local=$LOCAL_REPO
RUN mvn -o -Dopensextant.solr=./xponents-solr/solr7 \
      -Dmaven.repo.local=$LOCAL_REPO clean package dependency:copy-dependencies

# 1a. Log4J cleanup
RUN for log4jdir in `find $LOCAL_REPO -type d | grep log4j | grep "2.11"`; do rm -rf $log4jdir; done


# 2. Copy built items and metadata from install to final runtime CLASSPATH ./lib
RUN cp ./target/*jar ./lib/

#---------------------------
EXPOSE $XLAYER_PORT 7000
ENTRYPOINT ./script/xlayer-docker.sh $XLAYER_PORT
